{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/listingsviewapp/src/components/DataTable.jsx\";\nimport React from 'react';\n\nconst DataCell = ({\n  cellData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: cellData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DataCell;\n\nconst DataRow = ({\n  rowData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: Object.keys(rowData).map(key => {\n      return /*#__PURE__*/_jsxDEV(DataCell, {\n        cellData: rowData[key]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DataRow;\n\nconst DataTable = ({\n  data,\n  minPrice,\n  maxPrice,\n  minFloor,\n  maxFloor,\n  minUsableArea,\n  maxUsableArea,\n  enableEstateFilter,\n  estate,\n  enableSpecFilter,\n  spec\n}) => {\n  /* destructure table headers */\n  const headers = Object.keys(data[0]);\n  let bodyData = [];\n\n  let estateCondition = (enableEstateFilter, objEstate) => enableEstateFilter ? objEstate === estate : true;\n\n  let specCondition = (enableSpecFilter, objSpec) => enableSpecFilter ? objSpec === spec : true;\n\n  let priceCondition = objPrice => Number(objPrice) >= minPrice && (maxPrice ? Number(objPrice) <= maxPrice : true);\n\n  let floorCondition = objFloor => Number(objFloor) >= minFloor && (maxFloor ? Number(objFloor) <= maxFloor : true);\n\n  let usableAreaCondition = objUsableArea => Number(objUsableArea) >= minUsableArea && (maxFloor ? Number(objUsableArea) <= maxUsableArea : true);\n\n  let filteredData = data.filter(({\n    Price,\n    Estate,\n    Floor,\n    Spec,\n    UsableArea\n  }) => {\n    return priceCondition(Price) && estateCondition(enableEstateFilter, Estate) && floorCondition(Floor) && specCondition(enableSpecFilter, Spec) && usableAreaCondition(UsableArea.slice(0, -1));\n  });\n  filteredData.map((obj, index) => {\n    return bodyData.push( /*#__PURE__*/_jsxDEV(DataRow, {\n      rowData: obj\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(header => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: bodyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = DataTable;\nexport default DataTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DataCell\");\n$RefreshReg$(_c2, \"DataRow\");\n$RefreshReg$(_c3, \"DataTable\");","map":{"version":3,"sources":["/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/listingsviewapp/src/components/DataTable.jsx"],"names":["React","DataCell","cellData","DataRow","rowData","Object","keys","map","key","DataTable","data","minPrice","maxPrice","minFloor","maxFloor","minUsableArea","maxUsableArea","enableEstateFilter","estate","enableSpecFilter","spec","headers","bodyData","estateCondition","objEstate","specCondition","objSpec","priceCondition","objPrice","Number","floorCondition","objFloor","usableAreaCondition","objUsableArea","filteredData","filter","Price","Estate","Floor","Spec","UsableArea","slice","obj","index","push","header"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst DataCell = ({cellData}) => {\n    return (\n        <td>{cellData}</td>\n    );\n}\n\nconst DataRow = ({rowData}) => {\n    return (\n        <tr>\n            {Object.keys(rowData).map(key=>{\n                return <DataCell key={key} cellData ={rowData[key]}/>\n            })}\n        </tr>\n    )\n}\n\nconst DataTable = (\n    {data, \n     minPrice, maxPrice, \n     minFloor, maxFloor, \n     minUsableArea, maxUsableArea,\n     enableEstateFilter, estate, \n     enableSpecFilter, spec,\n    }) => {\n    /* destructure table headers */\n    const headers = Object.keys(data[0]);\n\n    let bodyData = [];\n\n    let estateCondition = (enableEstateFilter, objEstate) => enableEstateFilter ? (objEstate === estate) : (true);\n    let specCondition = (enableSpecFilter, objSpec) => enableSpecFilter ? (objSpec === spec) : (true);\n\n    let priceCondition = (objPrice) => (Number(objPrice) >= minPrice) && (maxPrice ? Number(objPrice) <= maxPrice : true);\n    let floorCondition = (objFloor) => (Number(objFloor) >= minFloor) && (maxFloor ? Number(objFloor) <= maxFloor : true);\n    let usableAreaCondition = (objUsableArea) => (Number(objUsableArea) >= minUsableArea) && (maxFloor ? Number(objUsableArea) <= maxUsableArea : true)\n    \n\n    let filteredData = data.filter(({Price, Estate, Floor, Spec, UsableArea})=>{\n        return priceCondition(Price) && \n               estateCondition(enableEstateFilter, Estate) && \n               floorCondition(Floor) && \n               specCondition(enableSpecFilter, Spec) &&\n               usableAreaCondition(UsableArea.slice(0,-1));\n    })\n\n    filteredData.map((obj, index)=>{\n        return bodyData.push(<DataRow key={index} rowData={obj}/>)\n    })\n\n    return (\n        \n        <table>\n            <thead>\n                <tr>\n                    {headers.map(header=>{\n                        return <th key={header}>{header}</th>\n                    })}\n                </tr>\n            </thead>\n            \n            <tbody>\n                {bodyData}\n            </tbody>\n            \n        </table>\n    );\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}