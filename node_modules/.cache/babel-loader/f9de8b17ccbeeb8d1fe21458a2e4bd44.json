{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/listingsviewapp/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport XLSX from 'xlsx';\nimport DataTable from './components/DataTable';\nimport Filters from './components/Filters';\n\nfunction reducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'SET_DATAREADY':\n      return { ...state,\n        dataReady: payload\n      };\n\n    case 'UPDATE_DATA':\n      return { ...state,\n        data: payload\n      };\n\n    case 'SET_LOADED':\n      return { ...state,\n        loaded: payload\n      };\n\n    case 'SET_FAIL':\n      return { ...state,\n        fail: payload\n      };\n\n    case 'SET_MINPRICE':\n      return { ...state,\n        minPrice: payload\n      };\n\n    case 'SET_MAXPRICE':\n      return { ...state,\n        maxPrice: payload\n      };\n\n    case 'SET_ERROR':\n      return { ...state,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const initialState = {\n    data: [],\n    loaded: false,\n    fail: false,\n    minPrice: 0,\n    maxPrice: '',\n    error: false\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    data,\n    loaded,\n    fail,\n    minPrice,\n    maxPrice\n  } = state;\n  /**\n   * triggered when user uploads a file;\n   * mainly for updating file if need be\n   */\n\n  const readFile = file => {\n    const promise = new Promise((res, rej) => {\n      /* read file */\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        const arrayBuffer = e.target.result;\n        /* now can read workbook */\n\n        const workbook = XLSX.read(arrayBuffer, {\n          type: 'buffer'\n        });\n        const worksheetName = workbook.SheetNames[0];\n        const workSheet = workbook.Sheets[worksheetName];\n        const data = XLSX.utils.sheet_to_json(workSheet);\n        res(data);\n      };\n\n      fileReader.onerror = err => rej(err);\n    });\n    promise.then(d => {\n      dispatch({\n        type: 'UPDATE_DATA',\n        payload: d[0]\n      });\n      dispatch({\n        type: 'SET_LOADED',\n        payload: true\n      });\n      return;\n    });\n  };\n  /* fetching data and update data state on mount */\n\n\n  useEffect(() => {\n    /* fetch data from ./public/data.json */\n    fetch('data.json', {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      dispatch({\n        type: 'UPDATE_DATA',\n        payload: data[0]\n      });\n      dispatch({\n        type: 'SET_LOADED',\n        payload: true\n      });\n      return;\n    }).catch(err => {\n      dispatch({\n        type: 'SET_LOADED',\n        payload: true\n      });\n      dispatch({\n        type: 'SET_FAIL',\n        payload: true\n      });\n      throw err;\n    });\n  }, [data]);\n  useEffect(() => {\n    Number(maxPrice) <= Number(minPrice) ? dispatch({\n      type: \"SET_ERROR\",\n      payload: 'Price(max) should be greater than Price(min)'\n    }) : dispatch({\n      type: 'SET_ERROR',\n      payload: false\n    });\n  }, [maxPrice, minPrice]);\n\n  const handleSetMinPrice = e => {\n    dispatch({\n      type: 'SET_MINPRICE',\n      payload: e.target.value\n    });\n  };\n\n  const handleSetMaxPrice = e => {\n    dispatch({\n      type: 'SET_MAXPRICE',\n      payload: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"XlFileLoader\",\n      id: \"XlFileLoader\",\n      accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      onChange: e => {\n        dispatch({\n          type: 'SET_LOADED',\n          payload: false\n        });\n        const file = e.target.files[0];\n        readFile(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      minPrice: minPrice,\n      maxPrice: maxPrice,\n      setMinPriceHandler: handleSetMinPrice,\n      setMaxPriceHandler: handleSetMaxPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), !fail ? loaded ? /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data,\n      minPrice: minPrice,\n      maxPrice: maxPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Still loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 90\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Failed to fetch data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/listingsviewapp/src/App.jsx"],"names":["React","useEffect","useReducer","XLSX","DataTable","Filters","reducer","state","action","type","payload","dataReady","data","loaded","fail","minPrice","maxPrice","error","App","initialState","dispatch","readFile","file","promise","Promise","res","rej","fileReader","FileReader","readAsArrayBuffer","onload","e","arrayBuffer","target","result","workbook","read","worksheetName","SheetNames","workSheet","Sheets","utils","sheet_to_json","onerror","err","then","d","fetch","headers","response","json","catch","Number","handleSetMinPrice","value","handleSetMaxPrice","files"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer} from 'react';\nimport XLSX from 'xlsx';\nimport DataTable from './components/DataTable';\nimport Filters from './components/Filters';\n\nfunction reducer(state, action) {\n  const {type, payload} = action;\n\n  switch(type) {\n    case 'SET_DATAREADY':\n      return {...state, dataReady: payload};\n    case 'UPDATE_DATA':\n      return {...state, data: payload};\n    case 'SET_LOADED':\n      return {...state, loaded: payload};\n    case 'SET_FAIL':\n      return {...state, fail: payload};\n    case 'SET_MINPRICE':\n      return {...state, minPrice: payload};\n    case 'SET_MAXPRICE':\n      return {...state, maxPrice: payload};\n    case 'SET_ERROR':\n      return {...state, error: payload}\n    default:\n      return state;\n  }\n}\n\nfunction App() { \n\n  const initialState = {\n    data: [],\n    loaded: false,\n    fail: false,\n    minPrice: 0,\n    maxPrice: '',\n    error: false\n  }\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {data, loaded, fail, minPrice, maxPrice} = state;\n\n  /**\n   * triggered when user uploads a file;\n   * mainly for updating file if need be\n   */ \n  const readFile = (file) => {\n    const promise = new Promise((res, rej)=>{\n      /* read file */\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (e) => {\n        const arrayBuffer = e.target.result;\n        /* now can read workbook */ \n        const workbook = XLSX.read(arrayBuffer, {type:'buffer'});\n        const worksheetName = workbook.SheetNames[0];\n        const workSheet = workbook.Sheets[worksheetName];\n        const data = XLSX.utils.sheet_to_json(workSheet);\n        res(data);\n      }\n \n      fileReader.onerror = (err) => rej(err);\n    })\n\n    promise.then((d)=>{\n      dispatch({type:'UPDATE_DATA', payload: d[0]});\n      dispatch({type:'SET_LOADED', payload: true});\n      return\n    })\n  }\n\n  /* fetching data and update data state on mount */ \n  useEffect(()=>{\n    /* fetch data from ./public/data.json */\n    fetch('data.json', {\n      headers:{\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response=>{\n      return response.json();\n    })\n    .then(data=>{\n      dispatch({type:'UPDATE_DATA', payload: data[0]});\n      dispatch({type:'SET_LOADED', payload: true});\n      return \n    })\n    .catch(err=>{\n      dispatch({type:'SET_LOADED', payload: true});\n      dispatch({type:'SET_FAIL', payload: true});\n      throw err;\n    })  \n\n  }, [data])\n\n  useEffect(()=>{\n    Number(maxPrice) <= Number(minPrice) ? \n      dispatch({type: \"SET_ERROR\", payload: 'Price(max) should be greater than Price(min)'}) : \n      dispatch({type: 'SET_ERROR', payload:false})\n  }, [maxPrice, minPrice])\n\n\n  const handleSetMinPrice = (e) => {\n    dispatch({type:'SET_MINPRICE', payload: e.target.value});\n  }\n  const handleSetMaxPrice = (e) => {\n    dispatch({type:'SET_MAXPRICE', payload: e.target.value});\n  }\n\n  return (\n\n      <div className=\"App\">\n\n        <input type=\"file\" \n        name=\"XlFileLoader\"\n        id=\"XlFileLoader\"\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" \n        onChange={(e)=>{\n          dispatch({type:'SET_LOADED', payload: false});\n          const file = e.target.files[0];\n          readFile(file);\n        }}/>\n\n        <Filters \n        minPrice={minPrice} \n        maxPrice={maxPrice}\n        setMinPriceHandler={handleSetMinPrice}\n        setMaxPriceHandler={handleSetMaxPrice}\n        />\n\n        { \n          !fail ? \n            (loaded ? <DataTable data={data} minPrice={minPrice} maxPrice={maxPrice}/> : <h1>Still loading data...</h1>) : \n            (<h1>Failed to fetch data...</h1>) \n        }\n\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}