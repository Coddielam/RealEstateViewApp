{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/datafilterview/src/components/DataTable.jsx\";\nimport React from 'react';\n\nconst DataCell = ({\n  cellData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: cellData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DataCell;\n\nconst DataRow = ({\n  rowData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: Object.keys(rowData).map(key => {\n      return /*#__PURE__*/_jsxDEV(DataCell, {\n        cellData: rowData[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DataRow;\n\nconst DataTable = ({\n  data\n}) => {\n  /* destructure table headers */\n  const headers = Object.keys(data[0][0]); // data is 3-d\n\n  let bodyData = [];\n  data[0].map(obj => {\n    bodyData.push( /*#__PURE__*/_jsxDEV(DataRow, {\n      rowData: obj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(header => {\n          /*#__PURE__*/\n          _jsxDEV(\"th\", {\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: bodyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = DataTable;\nexport default DataTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DataCell\");\n$RefreshReg$(_c2, \"DataRow\");\n$RefreshReg$(_c3, \"DataTable\");","map":{"version":3,"sources":["/Users/eddie.cm.lam/Desktop/eddie_proj/REdataProj/datafilterview/src/components/DataTable.jsx"],"names":["React","DataCell","cellData","DataRow","rowData","Object","keys","map","key","DataTable","data","headers","bodyData","obj","push","header"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC7B,sBACI;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;KAAMD,Q;;AAMN,MAAME,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC3B,sBACI;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,GAArB,CAAyBC,GAAG,IAAE;AAC3B,0BAAO,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAGJ,OAAO,CAACI,GAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;MAAML,O;;AAUN,MAAMM,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC1B;AACA,QAAMC,OAAO,GAAGN,MAAM,CAACC,IAAP,CAAYI,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAZ,CAAhB,CAF0B,CAEe;;AAEzC,MAAIE,QAAQ,GAAG,EAAf;AACAF,EAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQH,GAAR,CAAYM,GAAG,IAAE;AACbD,IAAAA,QAAQ,CAACE,IAAT,eAAc,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAd;AACH,GAFD;AAIA,sBAEI;AAAA,4BACI;AAAA,6BACI;AAAA,kBACKF,OAAO,CAACJ,GAAR,CAAYQ,MAAM,IAAE;AACjB;AAAA;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CA1BD;;MAAMH,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nconst DataCell = ({cellData}) => {\n    return (\n        <td>{cellData}</td>\n    );\n}\n\nconst DataRow = ({rowData}) => {\n    return (\n        <tr>\n            {Object.keys(rowData).map(key=>{\n                return <DataCell cellData ={rowData[key]}/>\n            })}\n        </tr>\n    )\n}\n\nconst DataTable = ({data}) => {\n    /* destructure table headers */\n    const headers = Object.keys(data[0][0]); // data is 3-d\n\n    let bodyData = [];\n    data[0].map(obj=>{\n        bodyData.push(<DataRow rowData={obj}/>)\n    })\n\n    return (\n        \n        <table>\n            <thead>\n                <tr>\n                    {headers.map(header=>{\n                        <th>{header}</th>\n                    })}\n                </tr>\n            </thead>\n            \n            <tbody>\n                {bodyData}\n            </tbody>\n            \n        </table>\n    );\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}